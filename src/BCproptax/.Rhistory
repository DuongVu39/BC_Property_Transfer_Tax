filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL TOTAL (count)",
"COMMERCIAL TOTAL (count)"))
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL TOTAL (count)",
"COMMERCIAL TOTAL (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL TOTAL (count)",
"COMMERCIAL TOTAL (count)",
"FARM TOTAL (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c(
"COMMERCIAL TOTAL (count)",
"FARM TOTAL (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_color_brewer("BuPu")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_color_continuous("Set1")
library(RColorBrewer)
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_color_continuous("Set1")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_color_brewer("Set1")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_color_brewer("BuPu")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_color_discrete("BuPu")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill = "Set1")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill = "Orange")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill = c("Orange","Red","Purper"))
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill = c("Orange","Red","Green"))
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill = ("Orange","Red","Green"))
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill ="Set1")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", fill ="grey70")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", alpha = 0.6)
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", alpha = 0.6)+
scale_fill_brewer(palette="Set1")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", alpha = 0.8)+
scale_fill_brewer(palette="Set1")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", alpha = 0.8)+
scale_fill_brewer(palette="Set2")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill", alpha = 0.8)+
scale_fill_brewer(palette="Spectral")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_fill_brewer(palette="Spectral")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_fill_brewer(palette="Accent")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_fill_brewer(palette="BuPu")
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_fill_brewer(palette="PuOr")
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_fill_manual(values=c("7CB140", "FF2A7F","FFAA00"))
city_tax %>%
filter(Municipality == "Abbotsford",
Statistics %in% c("RESIDENTIAL - COMMERCE (count)",
"RESIDENTIAL - FARM (count)",
"RESIDENTIAL - MULTI-FAMILY (count)")) %>%
ggplot(aes(x=date,y=values,group=Statistics,fill=Statistics)) +
geom_area(position="fill")+
scale_fill_manual(values=c("#7CB140", "#FF2A7F","#FFAA00"))
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Lahman)
library(lme4)
library(mice)
Teams_new <- Teams %>%
filter(yearID>= 1990)
head(Teams_new)
teams_model <- lmer(R ~ I(scale(BB))+ I(scale(H))
+ (I(scale(BB)) + I(scale(H))|teamID) ,Teams_new)
summary(teams_model)
corr <- c(-0.17,0.85)
sd <- c(5.997,5.221)
cov <- corr*sd
cov
mle_df <- broom::augment(teams_model)
ggplot(mle_df, aes(.fitted, .resid))+
geom_point(color = "orange") +
geom_hline(yintercept = 0) +
labs(title = "Residual plot vs fitted value",
x = "Fitted value",
y = "Residual")
teams_model1 <- lmer(R ~ I(scale(BB)) + (I(scale(BB))|teamID), Teams_new)
summary(teams_model1)
#coef_fit <- coef(teams_model1)$teamID
model1_df <- broom::augment(teams_model1)
Teams_new$fitted <- model1_df$.fitted
Teams_new$resid <- model1_df$.resid
model1_df <- Teams_new %>%
filter(teamID %in%
c("ANA", "MIL", "ML4", "BOS", "PHI", "MIN", "SEA", "FLO", "KCA"))
p1 <- ggplot(model1_df)+
geom_point(aes(BB, R,color = teamID)) +
geom_line(aes(BB,fitted)) +
facet_wrap(~teamID) +
labs(title = "Model 1 regression lines for 9 teams")
p1
teams_model2 <- lmList(R ~ BB | teamID, Teams_new)
summary(teams_model2)
p2 <- Teams_new %>%
filter(teamID %in%
c("ANA", "MIL", "ML4", "BOS", "PHI", "MIN", "SEA", "FLO", "KCA")) %>%
ggplot(aes(BB, R)) +
geom_jitter(aes(color = teamID)) +
geom_smooth(method = "lm") +
facet_wrap(~teamID)+
labs(title = "Model 2 regression lines for 9 teams")
p2
p3 <- cowplot::plot_grid(p1,p2)
title <- cowplot::ggdraw() + cowplot::draw_label("Compare the regression lines for 9 teams of each model", fontface='bold')
cowplot::plot_grid(title, t5, ncol=1, rel_heights=c(1, 10),
align = 'v', axis = 'l')
p3 <- cowplot::plot_grid(p1,p2)
title <- cowplot::ggdraw() + cowplot::draw_label("Compare the regression lines for 9 teams of each model", fontface='bold')
cowplot::plot_grid(title, p3, ncol=1, rel_heights=c(1, 10),
align = 'v', axis = 'l')
cowplot::plot_grid(title, p3, ncol=1, rel_heights=c(3, 10),
align = 'v', axis = 'l')
cowplot::plot_grid(title, p3, ncol=1, rel_heights=c(0.1, 1),
align = 'v', axis = 'l')
teams_model1 <- lmer(R ~ I(scale(BB)) + (I(scale(BB))|teamID), Teams_new)
summary(teams_model1)
#coef_fit <- coef(teams_model1)$teamID
model1_df <- broom::augment(teams_model1)
Teams_new$fitted <- model1_df$.fitted
Teams_new$resid <- model1_df$.resid
model1_df <- Teams_new %>%
filter(teamID %in%
c("ANA", "MIL", "ML4", "BOS", "PHI", "MIN", "SEA", "FLO", "KCA"))
p1 <- ggplot(model1_df)+
geom_point(aes(BB, R,color = teamID)) +
geom_line(aes(BB,fitted)) +
facet_wrap(~teamID)+
guides(fill=FALSE) +
labs(title = "Model 1 regression lines for 9 teams")
p1
p1 <- ggplot(model1_df)+
geom_point(aes(BB, R,color = teamID)) +
geom_line(aes(BB,fitted)) +
facet_wrap(~teamID)+
labs(title = "Model 1 regression lines for 9 teams") +
theme(legend.position = "none")
p1
p2 <- Teams_new %>%
filter(teamID %in%
c("ANA", "MIL", "ML4", "BOS", "PHI", "MIN", "SEA", "FLO", "KCA")) %>%
ggplot(aes(BB, R)) +
geom_jitter(aes(color = teamID)) +
geom_smooth(method = "lm") +
facet_wrap(~teamID)+
labs(title = "Model 2 regression lines for 9 teams")+
theme(legend.position = "none")
p2
p1 <- p1 + labs(title = "Model 1")
p2 <- p2 + labs(y ="",
title = "Model 2")
p3 <- cowplot::plot_grid(p1,p2)
title <- cowplot::ggdraw() + cowplot::draw_label("Compare the regression lines for 9 teams of each model", fontface='bold')
cowplot::plot_grid(title, p3, ncol=1, rel_heights=c(0.1, 1),
align = 'v', axis = 'l')
mle_df <- broom::augment(teams_model1)
r1 <- ggplot(mle_df, aes(.fitted, .resid))+
geom_point(color = "blue", alpha = 0.5) +
geom_hline(yintercept = 0) +
labs(title = "Residual plot vs fitted value of model 1",
x = "Fitted value",
y = "Residual")
#coef(teams_model2)
r2 <- plot(teams_model2)
r3 <- cowplot::plot_grid(r1,r2)
mle_df <- broom::augment(teams_model1)
ggplot(mle_df, aes(.fitted, .resid))+
geom_point(color = "blue", alpha = 0.5) +
geom_hline(yintercept = 0) +
labs(title = "Residual plot vs fitted value of model 1",
x = "Fitted value",
y = "Residual")
#coef(teams_model2)
plot(teams_model2)
titanic <- read.csv("data/titanic.csv")
sapply(titanic, function(x) sum(is.na(x)))
NA_age <- titanic %>%
filter(is.na(Age))
t1 <- ggplot(NA_age, aes(Pclass, fill=as.factor(Survived))) +
geom_bar(alpha = 0.7) +
guides(fill=FALSE)  +
labs(title = "Ticket class")
t2 <- ggplot(NA_age, aes(Sex, fill=as.factor(Survived))) +
geom_bar(alpha = 0.7) +
guides(fill=FALSE)   +
labs(title = "Gender")
t3 <- ggplot(NA_age, aes(Fare, fill=as.factor(Survived))) +
geom_density(alpha = 0.7) +
guides(fill=FALSE)  +
labs(title = "Passenger fare")
t4 <- ggplot(NA_age, aes(SibSp, fill=as.factor(Survived))) +
geom_bar(alpha = 0.7) +
labs(x = "Number of Sibling",
title = "Number of Sibling") +
scale_fill_discrete("",labels=c("Not survived","Survived"))+
theme(legend.position="bottom")
t5 <- cowplot::plot_grid(t1,t2,t3,t4)
title <- cowplot::ggdraw() + cowplot::draw_label("Explore missing value Age with regards to", fontface='bold')
cowplot::plot_grid(title, t5, ncol=1, rel_heights=c(0.1, 1),
align = 'v', axis = 'l')
CCtitanic <- titanic %>%
filter(!is.na(Age))
summary(glm(Survived~Age+Fare+Sex,data= CCtitanic,
family = binomial(link = "logit")))
# Replace the na with mean value of the column
MItitanic <- titanic
MItitanic[is.na(MItitanic[,"Age"]), "Age"] <- mean(MItitanic[,"Age"],
na.rm = TRUE)
summary(glm(Survived~Age+Fare+Sex,data= MItitanic,
family = binomial(link = "logit")))
# No iteration. Get Predictor-Matrix
init = mice(titanic, maxit=0)
predM = init$predictorMatrix
# Do not use following columns to impute values in 'Age'. Use the rest.
predM[, c("PassengerId", "Name","Ticket","Cabin")]=0
imp<-mice(titanic, m=20, predictorMatrix = predM)
# Get the final data-frame with imputed values filled in 'Age'
Mul_titanic <- complete(imp)
summary(glm(Survived~Age+Fare+Sex,data= Mul_titanic,
family = binomial(link = "logit")))
# No iteration. Get Predictor-Matrix
init = mice(titanic, m= 20, maxit=0)
predM = init$predictorMatrix
# Do not use following columns to impute values in 'Age'. Use the rest.
predM[, c("PassengerId", "Name","Ticket","Cabin")]=0
imp<-mice(titanic, m=5, predictorMatrix = predM)
# Get the final data-frame with imputed values filled in 'Age'
Mul_titanic <- complete(imp)
summary(glm(Survived~Age+Fare+Sex,data= Mul_titanic,
family = binomial(link = "logit")))
# No iteration. Get Predictor-Matrix
init = mice(titanic, maxit=0)
predM = init$predictorMatrix
# Do not use following columns to impute values in 'Age'. Use the rest.
predM[, c("PassengerId", "Name","Ticket","Cabin")]=0
imp<-mice(titanic, m=20, predictorMatrix = predM)
# Get the final data-frame with imputed values filled in 'Age'
Mul_titanic <- complete(imp)
summary(glm(Survived~Age+Fare+Sex,data= Mul_titanic,
family = binomial(link = "logit")))
shiny::runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
library(tidyverse)
library(tidyr)
library(stringr)
library(RColorBrewer)
monthly <- read_csv("../data/provincial-monthly_new.csv")
city_tax <- read_csv("../muni_tax.csv")
city_tax <- read_csv("muni_tax.csv")
city_tax <- read_csv("muni_tax.csv")
city_tax$Statistics
unique(city_tax$Statistics)
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
count_dollar <- as.tibble(t(as.data.frame(list(
c("Count","COMMERCIAL - COMMERCE (count)"),
c("Count","COMMERCIAL - OTHER (count)"),
c("Count","COMMERCIAL - STRATA NON-RESIDENTIAL (count)"),
c("Count","COMMERCIAL TOTAL (count)"),
c("Count","FARM TOTAL (count)"),
c("Count","OTHER/UNKNOWN TOTAL (count)"),
c("Count","RECREATIONAL TOTAL (count)"),
c("Count","RESIDENTIAL - ACREAGE (count)"),
c("Count","RESIDENTIAL - COMMERCE (count)"),
c("Count","RESIDENTIAL - FARM (count)"),
c("Count","RESIDENTIAL - MULTI-FAMILY (count)"),
c("Count","RESIDENTIAL - OTHER (count)"),
c("Count","RESIDENTIAL - SINGLE FAMILY RESIDENTIAL (count)"),
c("Count","RESIDENTIAL - STRATA NON-RESIDENTIAL or RENTAL (count)"),
c("Count","RESIDENTIAL - STRATA RESIDENTIAL (count)"),
c("Count","RESIDENTIAL TOTAL (count)"),
c("Count","Total Market Transactions (count)"),
c("Count","Foreign Involvement Transactions (count)"),
c("Dollar","FMV Median of Foreign Involvement Transactions ($ median)"),
c("Dollar","FMV Sum of Foreign Involvement Transactions ($ sum)")))))
View(count_dollar)
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
? selectInput()
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
install.packages("glue")
install.packages("glue")
install.packages("glue")
shiny::runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
knitr::opts_chunk$set(echo = TRUE)
city_tax <- read_csv("muni_tax.csv")
(city_tax %>% filter(Municipality == "Nanaimo"))
(city_tax %>% filter(Municipality == "Nanaimo",
!Statistics %in%
c("FMV Median of Foreign Involvement Transactions ($ median)","FMV Sum of Foreign Involvement Transactions ($ sum)")))
(city_tax %>% filter(Municipality == "Nanaimo",
!Statistics %in%
c("FMV Median of Foreign Involvement Transactions ($ median)","FMV Sum of Foreign Involvement Transactions ($ sum)")))$values
sum((city_tax %>% filter(Municipality == "Nanaimo",
!Statistics %in%
c("FMV Median of Foreign Involvement Transactions ($ median)","FMV Sum of Foreign Involvement Transactions ($ sum)")))$values)
sum((city_tax %>% filter(Municipality == "Nanaimo",
!Statistics %in%
c("FMV Median of Foreign Involvement Transactions ($ median)","FMV Sum of Foreign Involvement Transactions ($ sum)")))$values, na.rm = TRUE)
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
sum((city_tax %>% filter(Municipality == "Nanaimo",
!Statistics %in%
c("FMV Median of Foreign Involvement Transactions ($ median)",
"FMV Sum of Foreign Involvement Transactions ($ sum)")))$values, na.rm = TRUE)
runApp('Data_Science/DSCI_532_viz2/lab/BC_Property_Transfer_Tax/src/BCproptax')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
